//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { playersEntity } from './db/players.entity';
import { rolesEntity } from './db/roles.entity';
import { tasksEntity } from './db/tasks.entity';
import { transformationsEntity } from './db/transformations.entity';
import { pokemonsEntity } from './db/pokemons.entity';
import { upgradesEntity } from './db/upgrades.entity';
import { ninjutsusEntity } from './db/ninjutsus.entity';
import { voteCallEntity } from './db/voteCall.entity';
import { charactersEntity } from './db/characters.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      playersEntity,
      rolesEntity,
      tasksEntity,
      transformationsEntity,
      pokemonsEntity,
      upgradesEntity,
      ninjutsusEntity,
      voteCallEntity,
      charactersEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      players: [
        { eyePowers: 1, firePowers: 1, waterPowers: 1, earthPowers: 1, id: 1 },
        { eyePowers: 2, firePowers: 2, waterPowers: 2, earthPowers: 2, id: 19 },
        { eyePowers: 3, firePowers: 3, waterPowers: 3, earthPowers: 3, id: 78 },
        { eyePowers: 4, firePowers: 4, waterPowers: 4, earthPowers: 4, id: 32 },
        { eyePowers: 5, firePowers: 5, waterPowers: 5, earthPowers: 5, id: 98 },
      ],
      roles: [
        { guardingKeyAreas: false, secretRoomForBossStage: false, id: 94 },
        { guardingKeyAreas: true, secretRoomForBossStage: true, id: 54 },
        { guardingKeyAreas: true, secretRoomForBossStage: true, id: 62 },
        { guardingKeyAreas: true, secretRoomForBossStage: true, id: 59 },
        { guardingKeyAreas: true, secretRoomForBossStage: true, id: 60 },
      ],
      tasks: [
        {
          awareness: true,
          enemyTransformationDetection: true,
          spotEnemies: true,
          id: 69,
        },
        {
          awareness: false,
          enemyTransformationDetection: true,
          spotEnemies: false,
          id: 61,
        },
        {
          awareness: true,
          enemyTransformationDetection: false,
          spotEnemies: false,
          id: 60,
        },
        {
          awareness: false,
          enemyTransformationDetection: false,
          spotEnemies: false,
          id: 70,
        },
        {
          awareness: false,
          enemyTransformationDetection: false,
          spotEnemies: false,
          id: 68,
        },
      ],
      transformations: [
        {
          evolutionProcess: 'evolutionProcess 1',
          targetCharacter: 'targetCharacter 1',
          suitabilityToPosition: true,
          id: 47,
        },
        {
          evolutionProcess: 'evolutionProcess 2',
          targetCharacter: 'targetCharacter 2',
          suitabilityToPosition: false,
          id: 0,
        },
        {
          evolutionProcess: 'evolutionProcess 3',
          targetCharacter: 'targetCharacter 3',
          suitabilityToPosition: false,
          id: 62,
        },
        {
          evolutionProcess: 'evolutionProcess 4',
          targetCharacter: 'targetCharacter 4',
          suitabilityToPosition: true,
          id: 89,
        },
        {
          evolutionProcess: 'evolutionProcess 5',
          targetCharacter: 'targetCharacter 5',
          suitabilityToPosition: true,
          id: 15,
        },
      ],
      pokemons: [
        {
          giganticPowerActivation: true,
          powerMaximization: true,
          attackMechanism: 'attackMechanism 1',
          id: 93,
        },
        {
          giganticPowerActivation: false,
          powerMaximization: false,
          attackMechanism: 'attackMechanism 2',
          id: 6,
        },
        {
          giganticPowerActivation: true,
          powerMaximization: false,
          attackMechanism: 'attackMechanism 3',
          id: 9,
        },
        {
          giganticPowerActivation: false,
          powerMaximization: false,
          attackMechanism: 'attackMechanism 4',
          id: 88,
        },
        {
          giganticPowerActivation: false,
          powerMaximization: true,
          attackMechanism: 'attackMechanism 5',
          id: 87,
        },
      ],
      upgrades: [
        { eyesOfTheSharingan: false, id: 95 },
        { eyesOfTheSharingan: true, id: 100 },
        { eyesOfTheSharingan: false, id: 13 },
        { eyesOfTheSharingan: true, id: 33 },
        { eyesOfTheSharingan: true, id: 30 },
      ],
      ninjutsus: [
        { level: 1, id: 46 },
        { level: 2, id: 6 },
        { level: 3, id: 39 },
        { level: 4, id: 56 },
        { level: 5, id: 97 },
      ],
      voteCall: [
        { spotImposter: false, knockOut: false, id: 18 },
        { spotImposter: false, knockOut: false, id: 6 },
        { spotImposter: true, knockOut: false, id: 80 },
        { spotImposter: true, knockOut: false, id: 7 },
        { spotImposter: true, knockOut: true, id: 73 },
      ],
      characters: [
        {
          richness: 'richness 1',
          lifeLike: false,
          traditionalCostumes: 'traditionalCostumes 1',
          id: 52,
        },
        {
          richness: 'richness 2',
          lifeLike: true,
          traditionalCostumes: 'traditionalCostumes 2',
          id: 33,
        },
        {
          richness: 'richness 3',
          lifeLike: true,
          traditionalCostumes: 'traditionalCostumes 3',
          id: 50,
        },
        {
          richness: 'richness 4',
          lifeLike: false,
          traditionalCostumes: 'traditionalCostumes 4',
          id: 5,
        },
        {
          richness: 'richness 5',
          lifeLike: false,
          traditionalCostumes: 'traditionalCostumes 5',
          id: 75,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('playersEntity', data.players);
      await this.SeedResource('rolesEntity', data.roles);
      await this.SeedResource('tasksEntity', data.tasks);
      await this.SeedResource('transformationsEntity', data.transformations);
      await this.SeedResource('pokemonsEntity', data.pokemons);
      await this.SeedResource('upgradesEntity', data.upgrades);
      await this.SeedResource('ninjutsusEntity', data.ninjutsus);
      await this.SeedResource('voteCallEntity', data.voteCall);
      await this.SeedResource('charactersEntity', data.characters);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
